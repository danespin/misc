@startmindmap
* Attack Tree: Sniffing Inside Mainframe
** QDIO Trace
*** Enable APF-authorized QDIO trace on OSA-Express adapter
*** z/OS operator & RACF admin privileges
** RACF TCP/IP TRACE
*** Modify TCP/IP profile
*** RACF administrator privileges
** NetView Packet Capture
*** Configure and enable NetView distributed packet capture
*** z/OS operator & RACF admin privileges
@endmindmap

@startmindmap
* Attack Tree: Sniffing Outside Mainframe
** Rogue FTP Proxy
*** Script injection (FTP_PROXY override)
*** DNS / hosts file poisoning
** Network MitM
*** ARP spoofing (root on Linux/Windows host)
*** Switch port mirroring (network-admin access)
** Hypervisor / VM host sniffing
*** Promiscuous-mode vNIC on host
*** vSwitch port mirroring (hypervisor-admin)
@endmindmap

@startuml
' Deployment diagram: FTP sniffing vectors
skinparam componentStyle rectangle

node "Mainframe (z/OS)" as Mainframe {
    component "FTP Script\n(/usr/local/bin/ftp.sh)" as FTPScript
    database "z/OS RACF Logs & Trace" as RacfLog
}

node "Attacker Infrastructure" as Attacker {
    component "Rogue FTP Proxy\n(dev.ftp.local)" as RogueProxy
    artifact "Compromised Script\n(FTP_PROXY override)" as MalScript

    node "Network" as Net {
        artifact "Switch Mirror Port" as SwitchMirror
        artifact "Attacker VM\n(promiscuous mode)" as VMHost
    }
}

Mainframe --> RogueProxy : "FTP session\nTCP/IP port 21"
FTPScript ..> RogueProxy : "Override via FTP_PROXY / DNS hijack"
SwitchMirror --> Mainframe
SwitchMirror --> VMHost
@enduml

@startuml
'-------------------------------------------------------------------------------------------------------------------
'  Deployment diagram for on-prem SMC managing both on-prem and cloud HPC clusters
'-------------------------------------------------------------------------------------------------------------------

skinparam componentStyle rectangle
skinparam node {
  BorderColor #2B3E50
  BackgroundColor #F5F5F5
}

actor "Admin Console\n(User / Browser)" as Admin
actor "CLI (smcadmin)" as CLI

node "On-Prem Data Center" {
  node "SMC Master Node" as SMCMaster {
    artifact "Embedded DB\n(users, sessions, policies)" as DB
    artifact "RepurposingRepository\n(service packages, scripts)" as Repo
    artifact "Logs\n(smc.master.*.log)" as Logs
    component "SMCM Daemon\nIDL:7892/TLS\nRS:7873/TCP\nVEMKD:7870/TCP" as SMCM
    component "Web Console\nHTTPS:9081/TLS" as WebConsole
  }
  node "SMC Candidate Node" as SMCCand {
    component "SMCM Standby\n(same ports/config)" as SMCM2
  }
  node "SMC Proxy\n(On-Prem Cluster A)" as SMCP_A {
    artifact "smcp.xml\n(config for Cluster A + cloud targets)" as ConfA
    artifact "smcp.A.log\n(proxy logs)" as LogsA
    component "SMCP Daemon\nProxy IDL:7990/TLS" as SMCPA
  }
}

node "On-Prem HPC Cluster A" as PremClusterA {
  component "Session Director\nAdmin API:7869/TCP" as SDA
  component "VEMKD Daemon\nPort:7870/TCP" as VEMKDA
  storage "GPFS/NFS\n(user jobs data)" as StorageA
}

node "Cloud HPC Clusters" {
  node "Cloud Cluster C1" as CloudC1 {
    component "Session Director\n7869/TCP" as SDC1
    component "VEMKD\n7870/TCP" as VEMKDC1
    storage "GPFS/NFS\n(user jobs data)" as StorageC1
  }
  node "Cloud Cluster C2" as CloudC2 {
    component "Session Director\n7869/TCP" as SDC2
    component "VEMKD\n7870/TCP" as VEMKDC2
    storage "GPFS/NFS\n(user jobs data)" as StorageC2
  }
  node "Cloud Cluster C3" as CloudC3 {
    component "Session Director\n7869/TCP" as SDC3
    component "VEMKD\n7870/TCP" as VEMKDC3
    storage "GPFS/NFS\n(user jobs data)" as StorageC3
  }
}

node "External RDBMS" as ExtDB {
    database "External DB\nPostgreSQL/DB2\n(cluster reports, metrics)" as ReportsDB
}

' Admin GUI/API via web browser
Admin --> WebConsole : HTTPS/REST\nPort 9081/TLS
CLI --> WebConsole : HTTPS/REST\nPort 9081/TLS

' SMCP proxy to SMC master channels
SMCPA -u-> SMCM   : IDL\nPort 7892/TLS
SMCPA -u-> SMCM   : Repository Service\nPort 7873/TCP
SMCPA -u-> SMCM   : VEMKD Kernel\nPort 7870/TCP

' Proxy to on-prem cluster
SMCPA --> SDA    : SD Admin API\nPort 7869/TCP
SMCPA --> VEMKDA : VEMKD Kernel\nPort 7870/TCP

' Proxy to cloud clusters
SMCPA --> SDC1   : SD Admin API\nPort 7869/TCP
SMCPA --> VEMKDC1: VEMKD Kernel\nPort 7870/TCP

SMCPA --> SDC2   : SD Admin API\nPort 7869/TCP
SMCPA --> VEMKDC2: VEMKD Kernel\nPort 7870/TCP

SMCPA --> SDC3   : SD Admin API\nPort 7869/TCP
SMCPA --> VEMKDC3: VEMKD Kernel\nPort 7870/TCP

' SMC master to external DB (optional)
SMCM --> ReportsDB : JDBC/ODBC\nPort 5432/50000

@enduml
